@page "/search-movies"
@inject HttpClient Http

<style>
    h1.text-center {
        font-size: 2.5rem;
        margin: 20px 0;
    }

    .search-bar {
        display: flex;
        justify-content: center;
        margin-bottom: 20px;
    }

        .search-bar input {
            width: 50%;
            margin-right: 10px;
        }

    .movies-grid {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center;
    }

    .movie-card {
        width: 200px;
        text-align: center;
    }

        .movie-card img {
            border-radius: 10px;
            width: 100%;
        }

        .movie-card h3 {
            font-size: 1.2rem;
            margin: 10px 0;
        }

        .movie-card p {
            margin: 5px 0;
        }

        .movie-card .btn {
            font-size: 0.9rem;
        }

    .no-results {
        margin-top: 20px;
        color: #6c757d;
    }
</style>

<h1 class="text-center">Search Movies</h1>

<div class="search-bar">
    <input class="form-control" @bind="query" placeholder="Enter movie title" />
    <button class="btn btn-primary" @onclick="SearchForMovies">Search</button>
</div>

<!-- results  -->
@if (searchResults != null && searchResults.results.Count > 0)
{
    <div class="movies-grid">
        @foreach (var movie in searchResults.results)
        {
            <div class="movie-card">
                <a href="/movie/@movie.id">
                    <img src="@($"https://image.tmdb.org/t/p/w200{movie.poster_path}")"
                         alt="@movie.title"
                         onerror="this.src='https://via.placeholder.com/200x300?text=No+Image';" />
                </a>
                <h3>@movie.title</h3>
                <p><strong>Release Date:</strong> @movie.release_date</p>
                <p><strong>Rating:</strong> ⭐ @movie.vote_average / 10</p>
                <a href="/movie/@movie.id" class="btn btn-outline-primary">View Details</a>
            </div>
        }
    </div>
}
else if (searchResults != null)
{
    <div class="text-center no-results">
        <p>No results found. Please try another search.</p>
    </div>
}

@code {
    private string query;
    private MovieResponse searchResults;

    private const string ApiKey = "465fa49463bdb0beb19a2cecf51ce0f9"; 

    private async Task SearchForMovies()
    {
        if (string.IsNullOrWhiteSpace(query))
            return;

        try
        {
            // get search results from TMDB API
            searchResults = await Http.GetFromJsonAsync<MovieResponse>($"https://api.themoviedb.org/3/search/movie?api_key={ApiKey}&query={query}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error searching movies: {ex.Message}");
        }
    }

    public record MovieResponse
    {
        public List<Movie> results { get; set; }
    }

    public record Movie
    {
        public int id { get; set; }
        public string title { get; set; }
        public string release_date { get; set; }
        public string poster_path { get; set; } //  movie poster
        public double vote_average { get; set; }  // average rating
    }
}
